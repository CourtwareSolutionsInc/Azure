@model ViewIssueModel



<div id="dependency-section">
    <div id="dependencies-find-item-container" class="hide">
        <span>@GetResourceTemplate(ResourceKeys.Dependency)</span>
        <input id="dependencies-find-item" name="dependencies-find-item" type="text" class="input-size7"/>
    </div>

    @if (Model.Issue.Hierarchy.Count > 0)
    {
       <div class="label">Dependency tree:</div>
        <div id="dependency-content">
            @foreach (var hierarchyItem in Model.Issue.Hierarchy)
            {
                string status = (hierarchyItem.Value.IsClosed || Model.Issue.IsClosed) ? (Model.Issue.IsClosed ? "fullyClosed" : "closed") : "open";
                <div class="dependency @status @if(hierarchyItem.Value.Id == Model.Issue.Entity.Id){  <text>bold</text> }" data-id="@hierarchyItem.Value.Id">
                    @{
                        var allowDelete = false;
                        if (hierarchyItem.Value.ParentIssueId != null)
                        {
                            var parent =  Model.Issue.Hierarchy.Find( h => h.Value.Entity.Id == hierarchyItem.Value.ParentIssueId);
                            if (parent != null)
                            {
                                allowDelete = CanDoItemAction(UserAction.Delete, ItemAttributeVisibility.AssociatedHierarchy, parent.Value);
                            }
                        }
                    }
                        @if(allowDelete)
                        {
                        <span  class="fonticon-cross" title="@GetResource(ResourceKeys.Delete) @GetResource(ResourceKeys.Dependency)"></span>
                        }
                        else
                        {
                            <span  class="fonticon-cross noshow"></span>
                        }
                        @for (int i = 0; i < hierarchyItem.Key; i += 2)
                        {
                            <span class="pad-right-20"></span>
                        }       
                        @if(CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedHierarchy, hierarchyItem.Value))
                        {
                        <span  class="fonticon-plus" title="@GetResource(ResourceKeys.Add) @GetResource(ResourceKeys.Dependency)"></span>
                        }
                        else
                        {
                            <span  class="fonticon-plus noshow"></span>
                        }
                        <a class="item-links" href='@Url.Action("Item", "Item", new RouteValueDictionary(new { projectid = hierarchyItem.Value.Project.Id, projectcode = hierarchyItem.Value.Project.Code, issueid = hierarchyItem.Value.Id }))'>
                            <span class="@ViewHelpers.IssueStriked(hierarchyItem.Value)">@hierarchyItem.Value.IssueKey</span>                           
                            <span class="@ViewHelpers.IssueStriked(hierarchyItem.Value) @ViewHelpers.ViewItem_SameIssue(hierarchyItem.Value, Model.Issue)"></span>
                        </a>
                        @hierarchyItem.Value.Title.ToMaxMore(80)
                        @if(GeminiContext.PermissionsManager.CanSeeAttribute(ItemAction.View, ItemAttributeVisibility.Status, hierarchyItem.Value.Project, hierarchyItem.Value) ) { <span class="status">(@hierarchyItem.Value.Status)</span> }
          
                
                        @if (hierarchyItem.Value.EstimatedHours != 0 || (@hierarchyItem.Value.LoggedHours != 0 || @hierarchyItem.Value.LoggedMinutes != 0))
                        {
                            <span class="time info-label-4">@GetResourceTemplate(ResourceKeys.Estimated, Resourcing.Colon)&nbsp;@hierarchyItem.Value.EstimatedEffort &nbsp; @GetResourceTemplate(ResourceKeys.Logged, Resourcing.Colon)&nbsp;@hierarchyItem.Value.TimeLogged</span> 
                        }
                </div>
            }

            @foreach (var hierarchyItem in Model.Issue.Hierarchy)
            {
                if (hierarchyItem.Key == 0)
                {
                    <div class="clearfix pad-bottom-20"></div>
                    <span class="time-box">
                        <span class="label">@GetResource(ResourceKeys.Estimated, Resourcing.Colon)</span><span class="data">@hierarchyItem.Value.EstimatedIncludingKids</span>
                        <span class="label">@GetResource(ResourceKeys.Logged, Resourcing.Colon)</span><span class="data">@hierarchyItem.Value.LoggedIncludingKids</span>
                    </span>
                    break;
                }
            }
        </div>
    }
</div>
