@model ViewIssueModel

@if (@IsAuthenticated)
{
    <div id="item-toolbar">
        <span id="item-menu-dropdown" class="dropdown"><span class="fonticon-dropdown"></span>
            <ul class="cs-menu-dropdown item-menu">
                @if (@Model.CanEditIssue)
                {
                    <li><a id="action-edit" href="#">@GetResource(ResourceKeys.Edit)</a></li>
                }
                @if (@Model.CanMoveIssue)
                {
                    <li><a id="action-move" href="#">@GetResource(ResourceKeys.Move)</a></li>
                    <li><a id="action-copy" href="#">@GetResource(ResourceKeys.Copy)</a></li>
                }
                @if (Model.CanEditIssue || Model.CanMoveIssue)
                {
                    <li class="separator"></li>
                }
                
                @if (@Model.HasUserVoted == null && @Model.CanUserVote)
                {
                    <li><a id="action-vote" href="#">@GetResource(ResourceKeys.Vote)</a></li> 
                }

                @if (@Model.Issue.Watchers.Find(w => w.Entity.UserId == GeminiContext.User.Entity.Id) == null)
                {
                    <li><a id="action-follow-unfollow" data-alt-title="@GetResource(ResourceKeys.Unfollow)" href="#">@GetResource(ResourceKeys.Follow)</a></li> 
                }
                else
                {
                    <li><a id="action-follow-unfollow" data-alt-title="@GetResource(ResourceKeys.Follow)" href="#">@GetResource(ResourceKeys.Unfollow)</a></li> 
                }

                <li class="separator"></li>

                @if (CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedLinks))
                {
                    <li><a id="add-link" href="#">@GetResource(ResourceKeys.Link)</a></li>                     
                }

                @if (CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedHierarchy))
                {
                    <li><a id="add-dependency" href="#">@GetResource(ResourceKeys.Dependency)<span id="add-new-dependency">&nbsp&nbsp[+]</span></a></li>
                }

                @if (CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedAttachments))
                {
                    <li><span id="attachmentupload-hit">@GetResource(ResourceKeys.Attachments)</span></li>
                }

                @if (CanDoItemAction(UserAction.Edit, ItemAttributeVisibility.Description))
                {
                    
                    if (CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedLinks)
                        || CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedHierarchy)
                        || CanDoItemAction(UserAction.Create, ItemAttributeVisibility.AssociatedAttachments))
                    {
                        <li class="separator"></li>
                    }
                    
                    <li><a data-attribute-id="@ItemAttributeVisibility.Description.ToString()" id="add-description" href="#">@GetResource(ResourceKeys.Description)</a></li>                     
                }

                @if (@Model.CanDeleteIssue)
                {
                    <li class="separator"></li>
                    <li class="highlight"><a id="action-delete"href="#">@GetResource(ResourceKeys.Delete)</a></li>
                }
            </ul>
        </span>
    </div>
}
